create table categoria(
    codigo_categoria integer primary key autoincrement,
    nome text,
    descricao text
);

create table endereco(
    codigo_endereco integer primary key autoincrement,
    rua text,
    bairro text,
    cidade text,
    estado varchar(2),
    cep varchar(10)
);

create table usuario(
    codigo_usuario integer primary key autoincrement,
    nome text,
    email text,
    data_nascimento varchar (10),
    telefone varchar (14),
    nome_usuario text,
    cpf varchar (14),
    endereco integer,
    foreign key (endereco)
    references endereco(codigo_endereco)
);

create table pedido(
    codigo_pedido integer primary key autoincrement,
    data_pedido text,
    usuario_comprador integer, 
    foreign key (usuario_comprador)
    references usuario(codigo_usuario)
);

create table produto(
    codigo_produto integer primary key autoincrement,
    nome text,
    descricao text,
    qtd_estoque integer,
    data_fabricacao varchar(10),
    valor real,
    codigo_usuario_vendedor integer,
    categoria integer,
    foreign key (codigo_usuario_vendedor)
    references usuario(codigo_usuario)
    foreign key (categoria)
    references categoria(codigo_categoria)
);

create table lista_compras(
    quantidade text,
    pedido integer,
    produto integer,
    foreign key (pedido)
    references pedido(codigo_pedido)
    foreign key (produto)
    references produto(codigo_produto)
);

insert into categoria(nome, descricao) values 
('Papelaria', 'Itens Escolares'), 
('Esporte', 'Itens Esportivos'), 
('Eletrônicos', 'Itens Eletrônicos'), 
('Moda', 'Itens de Vestuário'), 
('Brinquedos', 'Diversão Infantil');

insert into endereco(rua, bairro, cidade, estado, cep) values 
('Alameda dos Anjos', 'Acapulco', 'Pindamonhamgaba', 'AM', '25680-286'),
('Rua Teresa', 'Vale do Carangola', 'Petrópolis', 'RJ', '25675-160'),
('Nelson de Sá Earp', 'Itaipava', 'Magé', 'RJ', '25740-100'),
('Afrânio Mello', 'Quitandinha', 'Petrópolis', 'RJ', '27896-452'),
('Eurico Rabello', 'Maracanã', 'Rio de Janeiro', 'RJ', '27856-532');

insert into usuario (nome, email, data_nascimento, telefone, nome_usuario, cpf, endereco) values 
('Vinicius Pires', 'piresvinicius35@gmail.com', '18/06/03', '(24)98823-8881', 'VP', '789.653.452-22', 1),
('Gabriel Almeida', 'gabriel357@yahoo.com', '26/12/99', '(24)98859-6472', 'GA', '762.157.666-71', 2),
('Rebeca Ribeiro', 'ribeirobeca1999@gmail.com', '15/05/99', '(24)98862-8613', 'RR', '123.456.789-10', 3),
('Cauã Freitas', 'cauadefreitas03@gmail.com', '03/02/04', '(24)98862-6127', 'CF', '184.246.465-22', 4),
('Juliana Couto', 'jnalmeida@ymail.com', '09/11/88', '(24)99301-2475', 'JC', '365.888.334-87', 5);

insert into pedido(data_pedido, usuario_comprador)values 
('10/04/22', 1),
('05/04/22', 2),
('28/04/22', 3),
('20/03/22', 4),
('09/03/22', 5);

insert into produto(nome, descricao, qtd_estoque, data_fabricacao, valor, codigo_usuario_vendedor, categoria)values
('Caderno Escolar do Iron Man', 'Caderno Espiral Capa Dura do Iron Man - 96 folhas', 19, '25/08/2021', 11.99, 2, 1),
('Caneta Bic Azul', 'Caneta esferográfica, corpo hexagonal, ponta 1.0 mm.', 28, '22/05/2020', 0.99, 2, 1),
('Mochila infantil Básica do Hulk', 'Mochila escolar infatil do Hulk com apenas 1 compartimento', 15, '11/04/2020', 129.99, 2, 1),
('Chuteira Adidas Profissional', 'Chuteira de futebol de última tecnologia', 10, '29/11/2021', 179.99, 3, 2),
('Bola de Futebol Adidas', 'Bola de Futebol Adidas Profissional Edição Copa - Cor Azul', 7, '14/08/2021', 79.99, 3, 2),
('Caneleira de Futebol Adidas', 'Caneleira Adidas Profissional resistência comprovada por especialistas', 10, '17/09/2021', 39.99, 3, 2),
('Xbox one', 'Video Game de última geração da Microsoft', 13, '25/07/2020', 1550.00, 5, 3),
('TV Oled Samsung 70 4k', 'TV de última geração com tecnologia HDR e modo filme', 20, '12/01/2022', 8789.99, 5, 3),
('Mouse Gamer Logitech RGB', 'Mouse Gamer com sensor óptica com resolução real de 8.500 dpi', 30, '14/06/2020', 89.99, 5, 3),
('Tênis Nike', 'Super macio e estiloso', 30, '02/04/2020', 239.99, 1, 4),
('Jaqueta Jeans Masculina', 'Jaqueta masculina jeans para todas a ocasiões', 20, '08/2021', 149.99, 1, 4),
('Sandália Feminina Infantil Chiquititas', 'Para sua filha estar sempre estilosa', 17, '08/2021', 50.00, 1, 4),
('Pista HotWheels Tubarão', 'Pista HotWheels Tubarão, para a diversão completa do seu filho', 15, '08/2021', 249.99, 4, 5),
('Boneco MaxSteel', 'Boneco MaxSteel', 6, '08/2021', 99.99, 2, 5),
('Fusca HotWheels', 'Fusca 1/64, para a diversão completa do seu filho', 30, '01/01/2020', 11.99, 4, 5),
('Tesoura Infantil Capitain American', 'Tesoura infantil para uso escolar', 22, '12/09/2019', 12.99, 2, 1),
('Lapiseira Pentel 0.7', 'Lapiseira Profissional da Pentel - Ponta média', 40, '15/08/2019', 29.99, 2, 1),
('Lancheira Black Panther', 'Lancheira Black Panther - Tamanho médio', 5, '07/11/2021', 89.99, 2, 1),
('Camisa de Futebol do Flamengo', 'Camisa do Flamengo Adidas - tamanho G', 100, '10/05/2022', 1000.00, 3, 2),
('Camisa Lendária Santos Pelé', 'Camisa Santos - Rei Pelé Edição Limitada', 50, '26/07/2022', 500.00, 3, 2),
('PS5', 'Video Game de última geração da Sony', 10, '28/08/2021', 4550.00, 4, 3),
('Monitor Oled Samsung 265hz gamer 32 Polegadas', 'Oled Samsung 265hz gamer 32 polegadas com tecnolgia avançada de filtro azul', 6, '19/08/2021', 5789.99, 5, 3),
('Mouse Positivo', 'Mouse Positivo para escritório', 21, '23/08/2021', 379.99, 5, 3),
('Pantufa Infantil Turma da Mônica ', 'Diversão ao seus pés - Limited Edition ', 3, '03/08/2021', 109.99, 1, 4);

insert into lista_compras(quantidade, pedido, produto)values 
(2, 1, 2), (1, 1, 8),
(1, 2, 7), (1, 2, 20),
(3, 3, 18), (1, 3, 21),
(2, 4, 24), (1, 4, 23), 
(5, 5, 17), (1, 5, 13);

update produto
set qtd_estoque = 26
where codigo_produto = 2;

delete from produto 
where codigo_produto = 3;

select
	nome,
	count(valor)
from
	produto  
group by	
	nome;

select sum(valor)
from produto;
-------------------------------
------Início das Consultas-----
-------------------------------
-- seleciona tudo de uma tabela
-- select * from nome_tabela
-- exemplo 1
select * from usuario;
-- exemplo 2
select * from produto;
------------------------------------------
------------------------------------------
-- seleciona o total de registro na tabela 
-- select count(*) from nome_tabela 
-- exemplo 1
select count(*) from usuario;
-- exemplo 2
select count(*) from produto;
-- exemplo 3
select count(*) from lista_compras;
-------------------------------------
-------------------------------------
-- seleciona uma ou mais colunas de uma tabela
-- select nome_coluna from nome_tabela 
-- exemplo 1
select nome from usuario;
-- exemplo 2
-- select nome_outra_coluna, nome_coluna from nome_tabela 
select nome, valor from produto;
-----------------------------------------------
-----------------------------------------------
-- seleciona o maior valor dentro de uma coluna ou a letra mais próxima de Z em caso de text
-- select max(nome_coluna) 
-- exemplo 1
select max(valor)
from produto; 
-- exemplo 2
-- select nome_coluna, max(nome_outra_coluna_com_valor)
select nome, max(valor)
from produto; 
-----------------------------------------------
-----------------------------------------------
-- seleciona o menor valor dentro de uma coluna ou a letra mais próxima de A em caso de text
-- select min(nome_coluna) 
-- exemplo 1
select min(valor)
from produto; 
-- exemplo 2
-- select nome_coluna, min(nome_outra_coluna_com_valor)
select nome, min(qtd_estoque)
from produto; 
------------------------------------------------------------
------------------------------------------------------------
-- seleciona uma coluna para ir do maior para o menor, no caso de letras ele ordena pelo alfabeto de cima para baixo (Z-A) (desc)
-- select nome_coluna from nome_tabela order by nome_coluna desc
-- exemplo 1
select qtd_estoque  
from produto 
order by qtd_estoque  desc;
-- exemplo 2 (usando o sentido da tabela que está depois de order by para controlar a exebiçao de outras tabelas)
-- select nome_outra_coluna, nome_coluna from nome_tabela order by nome_coluna desc
select nome, qtd_estoque  
from produto 
order by qtd_estoque  desc;
------------------------------------------------------------
------------------------------------------------------------
-- seleciona uma coluna para ir do menor para o maior, no caso de letras ele ordena pelo alfabeto de baixo para cima (A-Z) (asc)
-- select nome_coluna from nome_tabela order by nome_coluna asc
-- exemplo 1
select qtd_estoque  
from produto 
order by qtd_estoque asc;
-- exemplo 2 (usando o sentido da tabela que está depois de order by para controlar a exebiçao de outras tabelas)
-- select nome_outra_coluna, nome_coluna from nome_tabela order by nome_coluna asc
select nome, qtd_estoque  
from produto 
order by qtd_estoque asc;
------------------------------------------------------------
------------------------------------------------------------
-- colocando uma limitação de exibição das colunas 
-- select nome_outra_coluna, nome_coluna from nome_tabela limit numero_de_exibição
-- exemplo 1
select * from produto
limit 4;
-- exemplo 2
select nome, valor 
from produto
limit 5;
-- exemplo 3 
select nome, qtd_estoque  
from produto 
order by qtd_estoque asc
limit 6;
-- exemplo 4
select nome, qtd_estoque  
from produto 
order by qtd_estoque  desc
limit 6;
------------------------------------------------------------
------------------------------------------------------------
-- selecionar algum regostro dentro de alguma coluna pela letra inicia do registro 
-- select * from nome_coluna where nome_tabela like 'inicial%'
-- 	exemplo 1
select * 
from produto 
where nome like 'b%';
-- exemplo 2 (encontrar algum registro dentro da coluna que tem uma letra específica no meio
-- select * from nome_coluna where nome_tabela like '%letra%'
select * 
from produto 
where nome like '%o%';
-- exemplo 3 (Achando pela última letra)
-- select * from nome_coluna where nome_tabela like '%letra'
select * 
from produto 
where nome like '%l';
-- exemplo 4 (tornando a letra inicial da tabela toda usando o lower)
select nome, lower(nome)
from produto 
where lower (nome) like 'b%';
-- exemplo 5 (usando count para contar quantos artistas começam por alguma letra)
select count(*)
from produto p 
where nome like 'b%';
------------------------------------------------------------
------------------------------------------------------------
-- usuando apelidos para conectar uma tabela na outro
-- no caso abaixo estou querendo saber qual produto está dentro de cada categoria
-- select apelido_coluna.nome_coluna as nome_tabela_virtual
-- select apelido_coluna.nome_coluna as nome_tabela_virtual 
-- from nome_tabela + apelido, nome_tabela + apelido
-- where apelido.codigo chave primária = apelido.codigo chave estrangeira
-- exemplo 1
select p.nome as nome_produto, 
	   c.nome as nome_categoria
from categoria c, produto p -- não tem problema declarar depois o apelido da tabela 
where c.codigo_categoria = p.categoria; -- conexão de duas tabelas a partir da referência das chaves
-- exemplo 2 (colocando uma limitação para saber quantos produtos tem em uma categoria isolada)
select p.nome as nome_produto, 
	   c.nome as nome_categoria
from categoria c, produto p
where c.codigo_categoria = p.categoria
and c.nome =='Papelaria';
-- exemplo 3 (adicionando a coluna valor do produto para saber o valor de cada produto na categoria de eletrônicos)
select p.nome as nome_produto, 
	   c.nome as nome_categoria,
	   p.valor as valores_produto
from categoria c, produto p
where c.codigo_categoria = p.categoria
and c.nome =='Eletrônicos';
-- exemplo 4 (usando inner join)
select produto.nome as nome_produto,
       categoria.nome as nome_categoria
from categoria 
inner join produto 
on produto.categoria = categoria.codigo_categoria
and categoria.nome =='Papelaria';
-------------------------------------------
-------------- Nota Fiscal ----------------
select u2.nome as Vendedor,
	   u.nome as Comprador,
	   prod.nome as Produto, 
	   lc.quantidade as Quantidade,
	   prod.valor as Preço,
	   (lc.quantidade*prod.valor) as Total,
	   ped.data_pedido as Data_Pedidos 
from usuario u, 
     usuario u2, 
	 pedido ped, 
     produto prod, 
     lista_compras lc --essa última é a tabela associativa
where lc.produto = prod.codigo_produto -- conexão 1
and lc.pedido = ped.codigo_pedido  --conexão 2
and u.codigo_usuario = ped.usuario_comprador --conexão 3
and u2.codigo_usuario = prod.codigo_usuario_vendedor -- conexão 4
and u.nome =='Vinicius Pires';
-------------------------------------------
-------------- Nota Fiscal ----------------
select u2.nome as Vendedor,
	   u.nome as Comprador,
	   prod.nome as Produto, 
	   lc.quantidade as Quantidade,
	   prod.valor as Preço,
	   (lc.quantidade*prod.valor) as Total,
	   ped.data_pedido as Data_Pedidos
from lista_compras lc
inner join usuario u on lc.produto = prod.codigo_produto -- conexão 1
inner join usuario u2 on lc.pedido = ped.codigo_pedido  --conexão 2
inner join pedido ped on u.codigo_usuario = ped.usuario_comprador --conexão 3
inner join produto prod on u2.codigo_usuario = prod.codigo_usuario_vendedor -- conexão 4
where u.nome =='Gabriel Almeida';
